apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  annotations:
      keel.sh/policy: major
      keel.sh/approvals: "1"
      keel.sh/trigger: poll
      keel.sh/pollSchedule: '@every 12h'
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: "{{ .Values.image.repository }}/{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          env:
            TZ: America/New_York
            GF_PANELS_DISABLE_SANITIZE_HTML: "true"
            GF_AUTH_ANONYMOUS_ENABLED: "true"
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-config
      volumes:
        - name: grafana-config
          persistentVolumeClaim:
            claimName: grafana-config