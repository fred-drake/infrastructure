{{- $default_backup := printf "/backup/%s" .Release.Namespace -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backup
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backup
  template:
    metadata:
      labels:
        app: backup
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - readarr
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: backup-vol
        persistentVolumeClaim:
          claimName: readarr-config
      containers:
        - name: backup
          image: "{{ .Values.backup.image.repository }}:{{ .Values.backup.image.tag }}"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: TZ
              value: America/New_York
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secret
                  key: s3User
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secret
                  key: s3Password
            - name: RESTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backup-secret
                  key: resticPassword
            - name: RESTIC_REPOSITORY
              value: "{{ .Values.backup.restic.repository }}"
            - name: BACKUP_DIRECTORY
              value: "{{ default $default_backup .Values.backup.restic.backup_dir }}"
          volumeMounts:
            - mountPath: /backup
              name: backup-vol
