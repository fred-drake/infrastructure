apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ .Values.name | quote }}
  {{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Values.name | quote }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          ports:
            - name: postgres
              containerPort: {{ .Values.port }}
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ required "secretName value required!" .Values.secretName }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ required "secretName value required!" .Values.secretName }}
                  key: password
            - name: POSTGRES_DB
              value: {{ .Values.database }}
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: {{ required "existingClaim value required!" .Values.existingClaim }}

