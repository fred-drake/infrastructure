traefik:
  globalArguments:
    # - "--api.insecure=true"
    # - "--serverstransport.insecureskipverify=true"
    # - "--providers.kubernetesingress.ingressclass=traefik"
    # - "--metrics.prometheus=true"
    # - "--metrics.prometheus.entryPoint=metrics"
    # - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32"
    - "--global.sendanonymoususage=false"
    - "--global.checknewversion=false"
  additionalArguments:
    - "--serverstransport.insecureskipverify=true"
    - "--log.level=DEBUG"
  #     - "--providers.kubernetesingress.ingressendpoint.ip=192.168.50.151"
  #     - "--providers.kubernetescrd.allowexternalnameservices=true"
  #     - "--providers.kubernetesingress.allowexternalnameservices=true"
  deployment:
    enabled: true
    replicas: 1
    annotations: {}
    podAnnotations: {}
    additionalContainers: []
    initContainers: []

  ingressRoute:
    dashboard:
      enabled: false

  providers:
    kubernetesCRD:
      enabled: true
      ingressClass: traefik-external
    kubernetesIngress:
      enabled: true
      publishedService:
        enabled: false

  rbac:
    enabled: true

  service:
    enabled: true
    type: LoadBalancer
    annotations: {}
    labels: {}
    spec:
      loadBalancerIP: 192.168.50.151
    loadBalancerSourceRanges: []
    externapIPs: []


  ports:
    web:
      redirectTo: websecure
    websecure:
      tls:
        enabled: true

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
