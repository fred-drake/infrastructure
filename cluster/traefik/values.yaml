traefik:
  service:
    spec:
      loadBalancerIP: 192.168.50.151
      externalTrafficPolicy: Local
  globalArguments:
      - "--api.insecure=true"
      - "--serverstransport.insecureskipverify=true"
      - "--providers.kubernetesingress.ingressclass=traefik"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32"
  additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=192.168.50.151"
      - "--providers.kubernetescrd.allowexternalnameservices=true"
      - "--providers.kubernetesingress.allowexternalnameservices=true"
  ports:
    traefik:
      expose: true
    web:
      redirectTo: websecure
  tlsOptions:
    default:
      minVersion: VersionTLS12
      maxVersion: VersionTLS13
      sniStrict: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  certResolvers:
    letsencrypt:
      dnsChallenge:
        provider: cloudflare
        delayBeforeCheck: 30
        resolvers:
          - 1.1.1.1
          - 8.8.8.8
      tlsChallenge: true
      httpChallenge:
        entryPoint: "web"
      storage: /data/acme.json
  persistence:
    enabled: true
    existingClaim: traefik-acme
  envFrom:
    - secretRef:
        name: traefik-acme
