rook-ceph:
  crds:
    enabled: true
  pspEnable: false
  monitoring:
    enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 128Mi
    limits:
      memory: 256Mi

rook-ceph-cluster:
  monitoring:
    enabled: false
    createPrometheusRules: false
  ingress:
    dashboard:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
      host:
        name: &host "rook.internal.freddrake.com"
        path: /
      tls:
        - hosts:
            - *host
          secretName: rook-ceph-tls
  configOverride: |
    [global]
    bdev_enable_discard = true
    bdev_async_discard = true
  cephClusterSpec:
    network:
      provider: host
    crashCollector:
      disable: false
    dashboard:
      enabled: true
      urlPrefix: /
      ssl: false
    storage:
      useAllNodes: false
      useAllDevices: false
      config:
        osdsPerDevice: "1"
      nodes:
        - name: nuc4 
          devices:
            - name: "/dev/disk/by-id/scsi-SSABRENT__0000000000011"
  cephBlockPools:
    - name: ceph-blockpool
      spec:
        failureDomain: host
        replicated:
          size: 3
      storageClass:
        enabled: true
        name: ceph-block
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        parameters:
          imageFormat: "2"
          imageFeatures: layering
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          csi.storage.k8s.io/fstype: ext4
  cephFileSystems:
    - name: ceph-filesystem
      spec:
        metadataPool:
          replicated:
            # size: 3
            size: 1
        dataPools:
          - failureDomain: host
            replicated:
              size: 1
              # size: 3
            name: data0
        metadataServer:
          activeCount: 1
          activeStandby: true
          resources:
            requests:
              cpu: 1000m
              memory: 4Gi
            limits:
              memory: 4Gi
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem
        pool: data0
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        parameters:
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          csi.storage.k8s.io/fstype: ext4
  cephObjectStores:
    - name: ceph-objectstore
      spec:
        metadataPool:
          failureDomain: host
          replicated:
            size: 3
        dataPool:
          failureDomain: host
          erasureCoded:
            dataChunks: 2
            codingChunks: 1
        preservePoolsOnDelete: true
        gateway:
          port: 80
          resources:
            requests:
              cpu: 1000m
              memory: 1Gi
            limits:
              memory: 2Gi
          instances: 1
        healthCheck:
          bucket:
            interval: 60s
      storageClass:
        enabled: true
        name: ceph-bucket
        reclaimPolicy: Delete
        parameters:
          region: us-east-1

