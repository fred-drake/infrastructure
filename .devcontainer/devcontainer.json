// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	"build": {
		"dockerfile": "../Dockerfile",
		"context": "..",
		"target": "development"
	},

	"customizations": {
		"vscode": {
			"settings": {
				"python.formatting.provider": "black",
				"editor.rules": [ 88 ]
			},
		
			"extensions": [
				"redhat.ansible",
				"ms-python.python",
				"signageos.signageos-vscode-sops",
				"redhat.vscode-yaml",
				"python.black-formatter",
				"ms-azuretools.vscode-docker",
				"ms-python.flake8",
				"shipitsmarter.sops-edit",
				"github.copilot"
			]		
		}
	},

	"mounts": [
		"source=${localEnv:HOME}/.age/ansible-key.txt,target=/root/.age/ansible-key.txt,type=bind",
		"source=${localEnv:HOME}/.ssh/id_ansible,target=/root/.ssh/id_rsa,type=bind",
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
	]
	// Sets the run context to one level up instead of the .devcontainer folder.

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
