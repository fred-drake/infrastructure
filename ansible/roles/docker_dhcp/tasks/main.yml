---
- name: create application containers
  community.docker.docker_container:
    name: "{{ item.hostname }}"
    image: "djaydev/glass-isc-dhcp"
    # pull: "{{ container_pull }}"
    hostname: "{{ item.hostname }}"
    env:
      TZ: "{{ default_timezone }}"
      ADMINPASSWORD: "{{ services.dhcp.admin_password }}"
      WEBSOCKETPORT: "8080"
      WEBADMINPORT: "80"
    container_default_behavior: "{{ container_default_behavior }}"
    network_mode: "{{ item.network }}"
    restart_policy: "{{ container_restart_policy }}"
    volumes:
      - "{{ appdata_dir }}/{{ item.hostname }}/etc:/etc/dhcp"
      - "{{ appdata_dir }}/{{ item.hostname }}/leases:/var/lib/dhcp"
    networks:
      - name: "{{ item.network }}"
        ipv4_address: "{{ item.address }}"
    networks_cli_compatible: "{{ container_networks_cli_compatible }}"
    state: "{{ container_state }}"
  loop: "{{ dhcp_machines }}"
  notify:
    - deep prune docker
  tags:
    - dhcp
    - docker_critical_update

- name: generate dhcp static reservations from netbox
  connection: local
  become: false
  export_netbox_static_reservations:
    netbox_api_prefix: "{{ netbox_api_prefix }}"
    netbox_token: "{{ netbox_token }}"
    subnet_dict: "{{ dhcp_nets }}"
  register: reservation_results
  tags:
    - dhcp
    - update
    - dhcp_update

- name: set dhcp configurations
  template:
    src: "dhcp_{{ item.type }}.j2"
    dest: "{{ appdata_dir }}/{{ item.hostname }}/etc/dhcpd.conf"
    mode: "0644"
  loop: "{{ dhcp_machines }}"
  notify:
    - restart dhcp
  tags:
    - dhcp
    - update
    - dhcp_update
