subnet {{ t.value.subnet }} netmask {{ t.value.netmask }} {
    option routers {{ t.value.router }};
    option subnet-mask {{ t.value.netmask }};
    option domain-name "{{ secret.domain }}";
    option domain-search "{{ secret.domain }}";
    option domain-name-servers {{ t.value.dns1 }}, {{ t.value.dns2 }};
    default-lease-time 7200;
    max-lease-time 7200;
    next-server {{ t.value.boot_addr }};
    
    if option user-class = "iPXE" or (exists ipxe.http and ( exists ipxe.bzimage or exists ipxe.efi )) {
        filename "http://{{ t.value.boot_addr }}:5248/ipxe.cfg";
    } elsif option arch = 00:00 {
        # pxe
        filename "lpxelinux.0";
        option path-prefix "http://{{ t.value.boot_addr }}:5248/";
        if exists dhcp-parameter-request-list {
            # Always send the PXELINUX option (path-prefix)
            option dhcp-parameter-request-list = concat(
                option dhcp-parameter-request-list,d2);
        }
    } elsif option arch = 00:07 {
        # uefi_amd64_tftp
        filename "bootx64.efi";
    } elsif option arch = 00:10 {
        # uefi_amd64_http
        filename "http://{{ t.value.boot_addr }}:5248/images/bootx64.efi";
        option vendor-class-identifier "HTTPClient";
    } elsif option arch = 00:09 {
        # uefi_ebc_tftp
        filename "bootx64.efi";
    } elsif option arch = 00:0B {
        # uefi_arm64_tftp
        filename "bootaa64.efi";
    } elsif option arch = 00:13 {
        # uefi_arm64_http
        filename "http://{{ t.value.boot_addr }}:5248/images/bootaa64.efi";
        option vendor-class-identifier "HTTPClient";
    } elsif option arch = 00:0C {
        # open-firmware_ppc64el
        filename "bootppc64.bin";
    } elsif option arch = 00:0E {
        # powernv
        filename "pxelinux.0";
        option path-prefix "ppc64el/";
    } elsif option arch = 00:1F {
        # s390x
        filename "boots390x.bin";
        option path-prefix "s390x/";
    } elsif option arch = 00:20 {
        # s390x_partition
        filename "s390x_partition/maas";
    } else {
        # pxe
        filename "lpxelinux.0";
        option path-prefix "http://{{ t.value.boot_addr }}:5248/";
        if exists dhcp-parameter-request-list {
            # Always send the PXELINUX option (path-prefix)
            option dhcp-parameter-request-list = concat(
                option dhcp-parameter-request-list,d2);
        }
    } 

    pool {
        deny dynamic bootp clients;
        failover peer "dhcp-failover";
        default-lease-time 14400;
        range {{ t.value.range_start }} {{ t.value.range_end }};
    }
{% for h in reservation_results.reservations[t.key] %}

    host {{ h.hostname }} {
        hardware ethernet {{ h.mac_address }};
        fixed-address {{ h.ip_address }};
    }
{% endfor %}
}
