- name: Look for an existing master
  ansible.builtin.include_role:
    name: k3s
    tasks_from: find_master
  when: item != ansible_hostname
  loop: "{{ groups['k8s_master'] }}"

- name: Stat for existing k3s on this machine
  ansible.builtin.stat:
    path: /etc/rancher/k3s/k3s.yaml
  register: existing_k3s

- name: Install k3s onto machine as initial master
  ansible.builtin.include_role:
    name: k3s
    tasks_from: initial_master
  when: existing_master is not defined and not existing_k3s.stat.exists

- name: Pause to let the initial master initialize before checking
  ansible.builtin.pause:
    seconds: 30
  when: existing_master is not defined and not existing_k3s.stat.exists

- name: Stat for existing k3s on this machine
  ansible.builtin.stat:
    path: /etc/rancher/k3s/k3s.yaml
  register: existing_k3s

- name: Pull kubeconfig
  ansible.builtin.include_role:
    name: k3s
    tasks_from: kubectl
  when: existing_k3s.stat.exists

- name: Wait for k8s node to be ready
  become: false
  delegate_to: localhost
  ansible.builtin.command: kubectl wait --for=condition=Ready nodes {{ ansible_hostname }} --timeout=600s
  when: existing_master is not defined and not existing_k3s.stat.exists
  changed_when: false

- name: Install k3s onto machine as additional master
  ansible.builtin.include_role:
    name: k3s
    tasks_from: additional_master
  when: existing_master is defined and not existing_k3s.stat.exists
