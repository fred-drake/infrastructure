- name: Get labels
  traefik_labels:
    name: radarr
    domain: "{{ secret.domain }}"
    port: 7878
  register: tl

- name: Create config directory
  ansible.builtin.file:
    path: "{{ glusterfs_appdata_dir }}/radarr/config"
    state: directory
    mode: '0755'

# - name: CIFS movies volume
#   ansible.builtin.include_role:
#     name: docker/volume
#   vars:
#     volume:
#       name: movies
#       container: radarr
#       driver: cifs
#       mount_options: gid=100,uid=99,file_mode=0777,dir_mode=0777


- name: Radarr swarm service
  community.docker.docker_swarm_service:
    name: radarr
    image: linuxserver/radarr:latest
    placement:
      constraints: node.role==worker
    networks:
      - traefik
    labels: "{{ tl.labels }}"
    mounts:
      - source: "{{ glusterfs_appdata_dir }}/radarr/config"
        target: /config
      - source: "{{ glusterfs_appdata_dir }}/sabnzbd/downloads"
        target: /downloads
      - type: volume
        driver_config:
          name: local
          options:
            type: cifs
            device: "//{{ cifs_server }}/videos"
            o: "{{ cifs_docker_mount_options }},gid=100,uid=99,file_mode=0777,dir_mode=0777"
        source: radarr_videos
        target: /videos
      - type: volume
        driver_config:
          name: local
          options:
            type: cifs
            device: "//{{ cifs_server }}/videos"
            o: "{{ cifs_docker_mount_options }},gid=100,uid=99,file_mode=0777,dir_mode=0777"
        source: radarr_movies
        target: /movies
    env:
      PUID: "99"
      PGID: "100"
- name: Radarr backup service
  community.docker.docker_swarm_service:
    name: backup-radarr
    image: ghcr.io/fred-drake/k8s-backup:latest
    placement:
      constraints: node.role==worker
    mounts:
      - source: "{{ glusterfs_appdata_dir }}/radarr"
        target: /backup/radarr
    env:
      NAMESPACE: radarr
