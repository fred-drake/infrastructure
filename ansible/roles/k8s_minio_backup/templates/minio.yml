---
apiVersion: v1
kind: Namespace
metadata:
  name: "{{ services.minio_backup.name }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ services.minio_backup.name }}"
  namespace: "{{ services.minio_backup.name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ services.minio_backup.name }}"
  template:
    metadata:
      labels:
        app: "{{ services.minio_backup.name }}"
    spec:
      nodeSelector:
        backup_storage: "true"
      volumes:
        - name: config-vol
          hostPath:
            path: /mnt/backup/minio/config
            type: DirectoryOrCreate
        - name: data-vol
          hostPath:
            path: /mnt/backup/minio/data
            type: DirectoryOrCreate
      containers:
        - name: "{{ services.minio_backup.name }}"
          image: minio/minio
          imagePullPolicy: Always
          args: ['server', '/data', '--console-address', ':9001']
          env:
            - name: TZ
              value: "{{ default_timezone }}"
            - name: MINIO_ROOT_USER
              value: "{{ services.minio_backup.minio_root_user }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ services.minio_backup.minio_root_password }}"
          volumeMounts:
            - mountPath: /root/.minio
              name: config-vol
            - mountPath: /data
              name: data-vol
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ services.minio_backup.name }}"
  namespace: "{{ services.minio_backup.name }}"
spec:
  type: ClusterIP
  selector:
    app: "{{ services.minio_backup.name }}"
  ports:
    - port: 9000
      targetPort: 9000
      name: service-port
    - port: 9001
      targetPort: 9001
      name: ui-port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ services.minio_backup.name }}"
  namespace: "{{ services.minio_backup.name }}"
spec:
  rules:
  - host: "{{ services.minio_backup.host }}.{{ domain_name }}"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: "{{ services.minio_backup.name }}"
            port:
              number: 9000
  - host: "{{ services.minio_backup.ui_host }}.{{ domain_name }}"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: "{{ services.minio_backup.name }}"
            port:
              number: 9001
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-no-domain
  namespace: "{{ services.minio_backup.name }}"
spec:
  redirectRegex:
    regex: "^http://{{ services.minio_backup.host }}/.*"
    replacement: "https://{{ services.minio_backup.host }}.{{ domain_name }}/"
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: "{{ services.minio_backup.name }}"
  namespace: "{{ services.minio_backup.name }}"
entryPoints:
    - web
    - websecure
spec:
  routes:
    - match: Host(`{{ services.minio_backup.host }}`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
      middlewares:
      - name: redirect-no-domain
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-no-domain-ui
  namespace: "{{ services.minio_backup.name }}"
spec:
  redirectRegex:
    regex: "^http://{{ services.minio_backup.ui_host }}/.*"
    replacement: "https://{{ services.minio_backup.ui_host }}.{{ domain_name }}/"
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: "{{ services.minio_backup.ui_host }}"
  namespace: "{{ services.minio_backup.name }}"
entryPoints:
    - web
    - websecure
spec:
  routes:
    - match: Host(`{{ services.minio_backup.ui_host }}`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
      middlewares:
      - name: redirect-no-domain-ui
