---
- name: create temporary file
  ansible.builtin.tempfile:
    state: file
    suffix: temp
  register: tempfile_1
  changed_when: False

- name: pull latest longhorn block storage
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ k8s.longhorn.version }}/deploy/longhorn.yaml"
    dest: "{{ tempfile_1.path }}"
    mode: '0664'
  changed_when: False

- name: apply longhorn block storage
  k8s:
    state: present
    src: "{{ tempfile_1.path }}"
  notify: wait five minutes

- name: wait five minutes if we just applied longhorn
  meta: flush_handlers

- name: apply longhorn ingress
  k8s:
    state: present
    definition: "{{ lookup('template', 'longhorn-ingress.yml') | from_yaml_all }}"
  tags: testing

- name: remove default from local-path
  k8s:
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "false" 
        name: local-path

- name: add default to longhorn
  k8s:
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "true" 
        name: longhorn

# - name: set nodes for longhorn disk scheduling
#   k8s:
#     state: present
#     definition: "{{ lookup('template', 'longhorn-node-settings.yml') | from_yaml_all }}"
#   loop: "{{ longhorn_schedule_nodes | dict2items }}"

# - name: set longhorn configuration values
#   k8s:
#     state: present
#     definition: "{{ lookup('template', 'longhorn-settings.yml') | from_yaml_all }}"

# - name: set longhorn backup secret
#   k8s:
#     state: present
#     definition: "{{ lookup('template', 'longhorn-backup-secret.yml') | from_yaml_all }}"
