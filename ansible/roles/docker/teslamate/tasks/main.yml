---
- name: Create postgres container
  community.docker.docker_container:
    name: teslamate-db
    image: "postgres:16"
    pull: "{{ container_pull }}"
    hostname: teslamate-db
    env:
      TZ: "{{ default_timezone }}"
      POSTGRES_USER: "{{ secret.services.teslamate_db.postgres_user }}"
      POSTGRES_PASSWORD: "{{ secret.services.teslamate_db.postgres_password }}"
      POSTGRES_DB: "{{ secret.services.teslamate_db.postgres_db }}"
    volumes:
      - "{{ appdata_dir }}/TeslaMate-DB:/var/lib/postgresql/data"
    container_default_behavior: "{{ container_default_behavior }}"
    network_mode: "{{ secret.docker.network.container }}"
    restart_policy: unless-stopped
    networks:
      - name: "{{ secret.docker.network.container }}"
        ipv4_address: "{{ secret.services.teslamate_db.ip }}"
    networks_cli_compatible: "{{ container_networks_cli_compatible }}"
    state: "{{ container_state }}"
  notify:
    - Deep prune docker
  tags:
    - teslamate-db
    - docker_update

- name: Create application container
  community.docker.docker_container:
    name: "teslamate"
    image: "teslamate/teslamate"
    pull: "{{ container_pull }}"
    hostname: "teslamate"
    env:
      TZ: "{{ default_timezone }}"
      DATABASE_USER: "{{ secret.services.teslamate_db.postgres_user }}"
      DATABASE_PASS: "{{ secret.services.teslamate_db.postgres_password }}"
      DATABASE_NAME: "{{ secret.services.teslamate_db.postgres_db }}"
      DATABASE_HOST: "{{ secret.services.teslamate.database_host }}"
      DATABASE_PORT: "{{ secret.services.teslamate.database_port }}"
      MQTT_HOST: "{{ secret.services.teslamate.mqtt_host }}"
    container_default_behavior: "{{ container_default_behavior }}"
    network_mode: "{{ secret.docker.network.container }}"
    restart_policy: unless-stopped
    networks:
      - name: "{{ secret.docker.network.container }}"
        ipv4_address: "{{ secret.services.teslamate.ip }}"
    networks_cli_compatible: "{{ container_networks_cli_compatible }}"
    state: "{{ container_state }}"
  notify:
    - Deep prune docker
  tags:
    - teslamate
    - docker_update

- name: Create dashboard container
  community.docker.docker_container:
    name: teslamate-grafana
    image: "teslamate/grafana"
    pull: "{{ container_pull }}"
    hostname: teslamate-grafana
    env:
      TZ: "{{ default_timezone }}"
      DATABASE_USER: "{{ secret.services.teslamate_db.postgres_user }}"
      DATABASE_PASS: "{{ secret.services.teslamate_db.postgres_password }}"
      DATABASE_NAME: "{{ secret.services.teslamate_db.postgres_db }}"
      DATABASE_HOST: "{{ secret.services.teslamate.database_host }}"
      DATABASE_PORT: "{{ secret.services.teslamate.database_port }}"
    volumes:
      - "{{ appdata_dir }}/TeslaMate-Grafana:/var/lib/grafana"
    container_default_behavior: "{{ container_default_behavior }}"
    network_mode: "{{ secret.docker.network.container }}"
    restart_policy: unless-stopped
    networks:
      - name: "{{ secret.docker.network.container }}"
        ipv4_address: "{{ secret.services.teslamate_grafana.ip }}"
    networks_cli_compatible: "{{ container_networks_cli_compatible }}"
    state: "{{ container_state }}"
  notify:
    - Deep prune docker
  tags:
    - teslamate-grafana
    - docker_update
