---
- name: generate dhcp static reservations from netbox
  connection: local
  become: false
  export_netbox_static_reservations:
    netbox_api_prefix: "https://netbox.{{ secret.domain }}"
    netbox_token: "{{ secret.netbox.token }}"
    subnet_dict: "{{ secret.dhcp.nets }}"
  register: reservation_results
  tags:
    - dhcp
    - update
    - dhcp_update

- name: create data directory
  file:
    path: "{{ appdata_dir }}/{{ dhcp_id }}/data"
    state: directory
    mode: "0755"
  tags:
    - dhcp

- name: set dhcp configurations
  template:
    src: "dhcp_{{ secret.dhcp.machines[dhcp_id].type }}.j2"
    dest: "{{ appdata_dir }}/{{ dhcp_id }}/data/dhcpd.conf"
    mode: "0644"
  notify:
    - restart dhcp
  tags:
    - dhcp
    - dhcp_update

- name: create application containers
  community.docker.docker_container:
    name: "{{ dhcp_id }}"
    image: "networkboot/dhcpd"
    pull: "{{ container_pull }}"
    hostname: "{{ dhcp_id }}"
    env:
      TZ: "{{ default_timezone }}"
    container_default_behavior: "{{ container_default_behavior }}"
    network_mode: "{{ secret.dhcp.machines[dhcp_id].network }}"
    restart_policy: "{{ container_restart_policy }}"
    volumes:
      - "{{ appdata_dir }}/{{ dhcp_id }}/data:/data"
    networks: "{{ secret.dhcp.machines[dhcp_id].all_networks }}"
    networks_cli_compatible: "{{ container_networks_cli_compatible }}"
    state: "{{ container_state }}"
  notify:
    - deep prune docker
  tags:
    - dhcp

- name: glass gui container
  community.docker.docker_container:
    name: "glass-{{ dhcp_id }}"
    image: "fdrake/glass-dhcp"
    pull: "{{ container_pull }}"
    hostname: "glass-{{ dhcp_id }}"
    env:
      TZ: "{{ default_timezone }}"
      PORT: "80"
    container_default_behavior: "{{ container_default_behavior }}"
    network_mode: "{{ secret.dhcp.machines[dhcp_id].network }}"
    restart_policy: "{{ container_restart_policy }}"
    volumes:
      - "{{ appdata_dir }}/{{ dhcp_id }}/data:/data"
    networks:
      - name: "{{ secret.dhcp.machines[dhcp_id].network }}"
        ipv4_address: "{{ secret.dhcp.machines[dhcp_id].ui_address }}"
    networks_cli_compatible: "{{ container_networks_cli_compatible }}"
    state: "{{ container_state }}"
  notify:
    - deep prune docker
  tags:
    - dhcp
