http:
  routers:
{% for p in proxies %}
    {{ p.name }}:
      entryPoints:
        - https
      rule: "Host(`{{ p.name }}.{{ secret.domain }}`)"
      middlewares:
        - default-headers
      tls: {}
      service: {{ p.name }}
{% endfor %}

#    omada-login:
#      rule: "Host(`omada.{{ secret.domain }}`) && Path(`/`, `/login`)"
#      entryPoints:
#        - https
#      service: omada
#      tls: {}
#    omada-https:
#      rule: "Host(`omada.{{ secret.domain }}`)"
#      entryPoints:
#        - https
#      middlewares:
#        - omada-headers
#      tls: {}
#      service: omada
    omada:
      rule: "Host(`omada.{{ secret.domain }}`)"
      entryPoints:
        - https
      tls:
        certResolver: cloudflare
      service: omada-svc
      middlewares:
        - omada-redirect
        - omada-headers

  services:
{% for p in proxies %}
    {{ p.name }}:
      loadBalancer:
        servers:
          - url: "{{ p.url }}"
        passHostHeader: true
{% endfor %}

#    omada:
#      loadBalancer:
#        servers:
#          - url: "https://{{ secret.services.omada.ip }}:8043"
#        passHostHeader: true
    omada-svc:
      loadBalancer:
        servers:
          - url: "https://{{ secret.services.omada.ip }}:8043"
        passHostHeader: true

  middlewares:
    https-redirect:
      redirectScheme:
        scheme: https

    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipWhiteList:
        sourceRange:
          - "10.0.0.0/8"
          - "192.168.0.0/16"
          - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
          - default-whitelist
          - default-headers

#    omada-headers:
#      headers:
#        customRequestHeaders:
#          Host: omada.{{ secret.domain }}:8043
#        customResponseHeaders:
#          Host: omada.{{ secret.domain }}:443
    omada-redirect:
      redirectRegex:
        regex: ^https:\\/\\/([^\\/]+)\\/?$
        replacement: "https://${1}/login"
    omada-headers:
      headers:
        customRequestHeaders:
          Host: "{{ secret.services.omada.ip }}:8043"
        customResponseHeaders:
          Host: "omada.{{ secret.domain }}"