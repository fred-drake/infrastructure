- name: Get swarm service facts
  swarm_service_facts:
    name: "{{ service.name }}"
    domain: "{{ secret.domain }}"
    cifs_server: "{{ cifs_server }}"
    cifs_mount_options: "{{ cifs_docker_mount_options }}"
    nfs_server: "{{ secret.nfs.host }}"
    nfs_mount_options: "{{ secret.nfs.default_options }}"
    containers: "{{ service.containers }}"
    glusterfs_appdata_dir: "{{ glusterfs_appdata_dir }}"
  register: sf

- name: Debug
  ansible.builtin.debug:
    var: sf.facts

- name: Call initialization role
  ansible.builtin.include_role:
    name: "{{ service.init_role }}"
  when: service.init_role is defined

- name: Add network
  community.docker.docker_network:
    name: "{{ service.name }}"
    driver: overlay
  when: sf.facts.service_network

- name: Create bind directories for service
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  loop: "{{ sf.facts.bind_mount_source_paths }}"

- name: "Create container services"
  community.docker.docker_swarm_service:
    name: "{{ item.name }}"
    image: "{{ item.repository }}:{{ item.tag }}"
    placement:
      constraints: "{{ item.constraints }}"
    networks: "{{ item.networks | default(omit) }}"
    labels: "{{ item.labels | default(omit) }}"
    mounts: "{{ item.mounts | default(omit) }}"
    publish: "{{ item.publish | default(omit) }}"
    env: "{{ item.env | default(omit) }}"
  loop: "{{ sf.facts.services }}"
  loop_control:
    label: "{{ item.name }}"

- name: "Create backup service"
  community.docker.docker_swarm_service:
    name: "backup-{{ service.name }}"
    image: ghcr.io/fred-drake/k8s-backup:latest
    placement:
      constraints: node.role==worker
    mounts:
      - source: "{{ glusterfs_appdata_dir }}/{{ service.name }}"
        target: "/backup/{{ service.name }}"
    env:
      NAMESPACE: "{{ service.name }}"
  when: service.backup is defined and service.backup
