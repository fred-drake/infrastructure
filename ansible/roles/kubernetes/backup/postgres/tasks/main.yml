- name: Create backup directory
  ansible.builtin.file:
    path: "{{ backup_root_directory }}/{{ backup_directory }}"
    state: directory
    mode: '0755'

- name: Create temp file
  ansible.builtin.tempfile:
    state: file
  register: backup_script

- name: Make backup script
  ansible.builtin.template:
    src: backup.sh.j2
    dest: "{{ backup_script.path }}"
    mode: '0700'

- name: Store pgpass
  ansible.builtin.command: "kubectl cp -n {{ k8s_namespace }} {{ backup_script.path }} {{ pg_podname }}:/root/backup.sh"
  changed_when: true

- name: Delete temp file
  ansible.builtin.file:
    path: "{{ backup_script.path }}"
    state: absent

- name: Postgres dump to file
  ansible.builtin.command: "kubectl exec -n {{ k8s_namespace }} -i {{ pg_podname }} -- /root/backup.sh"
  changed_when: true

- name: Copy postgres backup from pod
  ansible.builtin.command: >
    kubectl cp -n {{ k8s_namespace }}
    {{ pg_podname }}:/root/{{ backup_file }} {{ backup_root_directory }}/{{ k8s_namespace }}/{{ backup_file }}
  changed_when: true

- name: Remove backup script
  ansible.builtin.command: "kubectl exec -n {{ k8s_namespace }} -i {{ pg_podname }} -- rm -f /root/restore.sh"
  changed_when: true

- name: Remove backup file
  ansible.builtin.command: "kubectl exec -n {{ k8s_namespace }} -i {{ pg_podname }} -- rm -f /root/{{ backup_file }}"
  changed_when: true
