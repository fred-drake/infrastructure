- name: jetstack helm repo
  kubernetes.core.helm_repository:
    name: jetstack-charts
    repo_url: https://charts.jetstack.io/
  tags: cert-manager

- name: cert-manager helm
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack-charts/cert-manager
    chart_version: v1.5.3
    release_namespace: cert-manager
    create_namespace: true
    values:
      installCRDs: false
      webhook:
        enabled: true
      extraArgs:
        - --dns01-recursive-nameservers=1.1.1.1:53,9.9.9.9:53
        - --dns01-recursive-nameservers-only
      replicaCount: 1
      podDnsPolicy: "None"
      podDnsConfig:
        nameservers:
          - "1.1.1.1"
          - "9.9.9.9"
      image:
        imagePullPolicy: Always
      resources:
        requests:
          cpu: "{{ cpu.request.default }}"
          memory: "{{ memory.request.default }}"

  tags: cert-manager

- name: Create temporary file
  ansible.builtin.tempfile:
    state: file
    suffix: temp
  register: crdsfile
  changed_when: False
  tags: cert-manager

- name: Download crds file
  ansible.builtin.get_url:
    url: https://github.com/jetstack/cert-manager/releases/download/v1.5.3/cert-manager.crds.yaml
    dest: "{{ crdsfile.path }}"
    mode: '0664'
  tags: cert-manager

- name: apply crds file
  k8s:
    state: present
    src: "{{ crdsfile.path }}"
  tags: cert-manager

- name: letsencrypt-production
  k8s:
    state: present
    definition: "{{ lookup('template', 'letsencrypt-production.yml') | from_yaml_all }}"
  tags: cert-manager

- name: letsencrypt-staging
  k8s:
    state: present
    definition: "{{ lookup('template', 'letsencrypt-staging.yml') | from_yaml_all }}"
  tags: cert-manager

- name: cert-manager secret
  k8s:
    state: present
    definition: "{{ lookup('template', 'cert-secret.yml') | from_yaml_all }}"
  tags: cert-manager

- name: domain-certificate
  k8s:
    state: present
    definition: "{{ lookup('template', 'domain-certificate.yml') | from_yaml_all }}"
  tags: cert-manager
