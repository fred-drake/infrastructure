- name: "PG {{ k8s_namespace }}-postgres / create temp file"
  ansible.builtin.tempfile:
    state: file
  register: restore_script

- name: "Vol {{ k8s_namespace }}-postgres / make restore script"
  ansible.builtin.template:
    src: restore.sh.j2
    dest: "{{ restore_script.path }}"
    mode: '0700'

- name: "Vol {{ k8s_namespace }}-postgres / store pgpass"
  ansible.builtin.command: "kubectl cp -n {{ k8s_namespace }} {{ restore_script.path }} {{ pg_podname }}:/root/restore.sh"
  changed_when: true

- name: "Vol {{ k8s_namespace }}-postgres / delete temp file"
  ansible.builtin.file:
    path: "{{ restore_script.path }}"
    state: absent

- name: "Vol {{ k8s_namespace }}-postgres / copy postgres backup to pod"
  ansible.builtin.command: >
    kubectl cp -n {{ k8s_namespace }}
    {{ backup_root_directory }}/{{ k8s_namespace }}/{{ backup_file }} {{ pg_podname }}:/root
  changed_when: true

- name: "Vol {{ k8s_namespace }}-postgres / postgres restore"
  ansible.builtin.command: "kubectl exec -n {{ k8s_namespace }} -i {{ pg_podname }} -- /root/restore.sh"
  changed_when: true

- name: "Vol {{ k8s_namespace }}-postgres / remove backup script"
  ansible.builtin.command: "kubectl exec -n {{ k8s_namespace }} -i {{ pg_podname }} -- rm -f /root/restore.sh"
  changed_when: true

- name: "Vol {{ k8s_namespace }}-postgres / remove backup file"
  ansible.builtin.command: "kubectl exec -n {{ k8s_namespace }} -i {{ pg_podname }} -- rm -f /root/{{ backup_file }}"
  changed_when: true
