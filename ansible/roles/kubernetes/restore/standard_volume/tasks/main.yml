- name: "{{ k8s_namespace }}-{{ backup_directory }} / restoring volume"
  shell: >
    kubectl cp -n {{ k8s_namespace }}
    {{ backup_root_directory }}/{{ k8s_namespace }}/{{ backup_directory }} -c {{ container_name }}
    `kubectl get pod -n {{ k8s_namespace }} -o json | jq ".items[0].metadata.name" | tr -d \"`:{{ container_directory }}

- name: "{{ k8s_namespace }}- - {{ backup_directory }} / setting user permissions"
  shell: >
    kubectl exec -it `kubectl get pod -n {{ k8s_namespace }} -o json | jq ".items[0].metadata.name" | tr -d \"` --
    chown -R {{ k8s_user }} {{ container_directory }}/{{ backup_directory }}
  when: k8s_user is defined

- name: "{{ k8s_namespace }}- - {{ backup_directory }} / setting group permissions"
  shell: >
    kubectl exec -it `kubectl get pod -n {{ k8s_namespace }} -o json | jq ".items[0].metadata.name" | tr -d \"` --
    chgrp -R {{ k8s_group }} {{ container_directory }}/{{ backup_directory }}
  when: k8s_group is defined
  
- name: "{{ k8s_namespace }}-{{ backup_directory }} / bouncing pod"
  shell: >
    kubectl -n {{ k8s_namespace }} delete pod `kubectl get pod -n {{ k8s_namespace }} -o json | jq ".items[0].metadata.name" | tr -d \"`
  when: bounce_pod | default(true)
