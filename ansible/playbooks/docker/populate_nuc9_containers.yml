- name: Containers on the nuc9 server
  hosts: nuc9
  gather_facts: false
  become: true
  roles:

  #### Promtail ####
    - role: promtail
      tags: promtail
    - role: docker/container
      vars:
        container:
          name: promtail
          repository: grafana/promtail
          tag: latest
          entrypoint: >
            /bin/sh -c
            "export HOSTNAME=`/bin/cat /etc/hostname` &&
            /usr/bin/promtail --client.external-labels=host=$HOSTNAME --config.file=/etc/promtail/config.yml"
          network: bridge
          volumes:
            - "{{ appdata_dir }}/promtail/promtail/config:/etc/promtail"
            - /var/log:/var/log:ro
            - /etc/hostname:/etc/hostname:ro
      tags: promtail

    ### Prometheus Node Exporter ###
    - role: docker/container
      vars:
        container:
          name: node-exporter
          repository: "prom/node-exporter"
          tag: latest
          ip: "{{ secret.services.prometheus.node_exporter.nuc9.ip }}"
          volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
          command:
            - "--path.procfs=/host/proc"
            - "--path.rootfs=/rootfs"
            - "--path.sysfs=/host/sys"
            - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      tags: prometheus

    ### Traefik Internal ###
    - name: traefik internal
      role: docker/traefik
      vars:
        traefik_type: internal
        proxies:
          - name: calibre
            url: "http://{{ secret.services.calibre_web.ip }}:8083"
          - name: calibre-server
            url: "http://{{ secret.services.calibre.ip }}:8080"
          - name: ersatz
            url: "http://{{ secret.services.ersatz.ip }}:8409"
          - name: homebridge
            url: "http://{{ secret.services.homebridge.ip }}:8581"
          - name: minio-backup
            url: "http://{{ secret.services.minio_backup.ip }}:9000"
          - name: minio-backup-ui
            url: "http://{{ secret.services.minio_backup.ip }}:9001"
          - name: minio-k8s
            url: "http://192.168.50.72:9001"
          - name: minio-loki
            url: "http://{{ secret.services.minio_loki.ip }}:9000"
          - name: minio-loki-ui
            url: "http://{{ secret.services.minio_loki.ip }}:9001"
          - name: minio-nexus
            url: "http://{{ secret.services.minio_nexus.ip }}:9000"
          - name: minio-nexus-ui
            url: "http://{{ secret.services.minio_nexus.ip }}:9001"
          - name: netboot
            url: "http://{{ secret.services.netboot.ip_50 }}:3000"
          - name: overseerr
            url: "http://{{ secret.services.overseerr.ip }}:5055"
          - name: photoprism-internal
            url: "http://{{ secret.services.photoprism.internal_ip }}:2342"
          - name: plex
            url: "http://{{ secret.services.plex.ip }}:32400"
          - name: readarr
            url: "http://{{ secret.services.readarr.ip }}:8787"
          - name: scanner-api
            url: "http://{{ secret.services.scannerpi.ip }}:3000"
          - name: tdarr
            url: "http://{{ secret.services.tdarr.ip }}:8265"
          - name: torrent
            url: "http://{{ secret.services.torrent.ip }}:9091"
          - name: uptime-kuma
            url: "http://{{ secret.services.uptime_kuma.ip }}:3001"
        container:
          name: traefik-internal
          repository: traefik
          tag: latest
          ip: "{{ secret.services.traefik_internal.ip }}"
          env:
            CLOUDFLARE_EMAIL: "{{ secret.services.traefik_internal.cloudflare_email }}"
            CLOUDFLARE_API_KEY: "{{ secret.services.traefik_internal.cloudflare_key }}"
          security_opts:
            - "no-new-privileges:true"
          labels:
            traefik.enable: "true"
            traefik.http.services.justAdummyService.loadbalancer.server.port: "1337"
            traefik.http.routers.traefik.entrypoints: http
            traefik.http.routers.traefik.rule: "Host (`traefik-internal.{{ secret.domain }}`)"
            traefik.http.middlewares.traefik-auth.basicauth.users: "{{ secret.services.traefik_internal.credentials }}"
            traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme: https
            traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto: https
            traefik.http.routers.traefik.middlewares: traefik-https-redirect
            traefik.http.routers.traefik-secure.entrypoints: https
            traefik.http.routers.traefik-secure.rule: "Host (`traefik-internal.{{ secret.domain }}`)"
            traefik.http.routers.traefik-secure.middlewares: traefik-auth
            traefik.http.routers.traefik-secure.tls: "true"
            traefik.http.routers.traefik-secure.tls.certresolver: cloudflare
            traefik.http.routers.traefik-secure.tls.domains[0].main: "{{ secret.domain }}"
            traefik.http.routers.traefik-secure.tls.domains[0].sans: "*.{{ secret.domain }}"
            traefik.http.routers.traefik-secure.service: api@internal
            # traefik.http.routers.omada.rule: "Host(`omada.{{ secret.domain }}`)"
            # traefik.http.routers.omada.entrypoints: https
            # traefik.http.routers.omada.tls: "true"
            # traefik.http.routers.omada.tls.certresolver: cloudflare
            # traefik.http.routers.omada.service: omada-svc
            # traefik.http.routers.omada.middlewares: omada-middlewares
            # traefik.http.services.omada-svc.loadbalancer.server.scheme: https
            # traefik.http.services.omada-svc.loadbalancer.server.host: "{{ secret.services.omada.ip }}"
            # traefik.http.services.omada-svc.loadbalancer.server.port: "8043"
            # traefik.http.services.omada-svc.loadbalancer.passhostheader: "true"
            # traefik.http.middlewares.omada-middlewares.chain.middlewares: omada-redirect,omada-headers
            # traefik.http.middlewares.omada-headers.headers.customrequestheaders.Host: "omada.{{ secret.domain }}:8043"
            # traefik.http.middlewares.omada-headers.headers.customresponseheaders.Host: "omada.{{ secret.domain }}"
            # traefik.http.middlewares.omada-redirect.redirectregex.regex: "^https:\\/\\/([^\\/]+)\\/?$$"
            # traefik.http.middlewares.omada-redirect.redirectregex.replacement: "https://$$1/login"
          volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "{{ appdata_dir }}/traefik-internal/data/traefik.yml:/traefik.yml:ro"
            - "{{ appdata_dir }}/traefik-internal/data/acme.json:/acme.json"
            - "{{ appdata_dir }}/traefik-internal/config.yml:/config.yml:ro"
      tags: traefik_internal

    ### MAAS Database ###
    - role: docker/container
      vars:
        container:
          name: maas-postgres
          repository: "docker-hub.{{ secret.domain }}/postgres"
          tag: "14"
          network: bridge
          ports:
            - 0.0.0.0:5432:5432
          env:
            POSTGRES_USER: "{{ secret.services.maas.postgres.user }}"
            POSTGRES_PASSWORD: "{{ secret.services.maas.postgres.password }}"
            POSTGRES_DB: "{{ secret.services.maas.postgres.database }}"
          volumes:
            - "/appdata/maas/postgres/data:/var/lib/postgresql/data"
      tags: maas
    - role: docker/container
      vars:
        container:
          name: backup-maas
          repository: ghcr.io/fred-drake/k8s-backup
          tag: latest
          network: bridge
          env:
            AWS_ACCESS_KEY_ID: "{{ secret.backup.keyId }}"
            AWS_SECRET_ACCESS_KEY: "{{ secret.backup.keySecret }}"
            RESTIC_REPOSITORY: "s3:http://minio-backup-app.{{ secret.domain }}:9000/restic"
            RESTIC_PASSWORD: "{{ secret.backup.restic.password }}"
            NAMESPACE: maas
            BACKUP_TYPES: postgresql
            PG_HOST: "nuc9.{{ secret.domain }}"
            PG_DATABASE: "{{ secret.services.maas.postgres.database }}"
            PG_PORT: "5432"
            PG_USER: "{{ secret.services.maas.postgres.user }}"
            PG_PASSWORD: "{{ secret.services.maas.postgres.password }}"
            PG_BACKUP_FILE: "maas.sql"
          volumes:
            - "/snap/maas/current/etc/maas:/backup/maas/etc"
            - "/var/snap/maas/common/maas:/backup/maas/var"
      tags: maas
