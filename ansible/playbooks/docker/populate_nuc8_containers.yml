- name: Nuc8 containers
  hosts: nuc8
  gather_facts: false
  become: true
  roles:
    ### Dozzle - NUC8 ###
    - role: docker/container
      vars:
        container:
          name: dozzle
          repository: "docker-hub.{{ secret.domain }}/amir20/dozzle"
          tag: "{{ special_tags.dozzle.tag | default('latest') }}"
          ip: "{{ secret.services.dozzle.nuc8_ip }}"
          env:
            DOZZLE_BASE: /
            DOZZLE_LEVEL: info
            DOZZLE_TAILSIZE: "300"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
      tags: dozzle

    ### Photoprism ###
    - role: docker/volume
      vars:
        volume:
          name: pictures
          container: "docker-hub.{{ secret.domain }}/photoprism"
          driver: cifs
          mount_options: gid=100,uid=99,file_mode=0777,dir_mode=0777
      tags: photoprism
    - role: docker/container
      vars:
        container:
          name: photoprism-db
          repository: "docker-hub.{{ secret.domain }}/mariadb"
          tag: "10"
          ip: "{{ secret.services.photoprism.db.ip }}"
          env:
            MYSQL_ROOT_PASSWORD: "{{ secret.services.photoprism.db.root_password }}"
            MYSQL_DATABASE: "{{ secret.services.photoprism.db.database }}"
            MYSQL_USER: "{{ secret.services.photoprism.db.user }}"
            MYSQL_PASSWORD: "{{ secret.services.photoprism.db.password }}"
          volumes:
            - "{{ appdata_dir }}/photoprism/database:/var/lib/mysql"
      tags: photoprism
    - role: docker/volume
      vars:
        volume:
          name: pictures
          container: photoprism-readonly
          driver: cifs
          mount_options: gid=100,uid=99,file_mode=0777,dir_mode=0777,ro
      tags: photoprism
    - role: docker/container
      vars:
        container:
          name: photoprism-readonly
          repository: "docker-hub.{{ secret.domain }}/photoprism/photoprism"
          tag: latest
          ip: "{{ secret.services.photoprism.readonly_ip }}"
          env:
            PHOTOPRISM_UPLOAD_NSFW: "{{ secret.services.photoprism.allow_nsfw }}"
            PHOTOPRISM_DETECT_NSFW: "{{ secret.services.photoprism.detect_nsfw }}"
            PHOTOPRISM_SITE_TITLE: "{{ secret.services.photoprism.title }}"
            PHOTOPRISM_SITE_CAPTION: "{{ secret.services.photoprism.caption }}"
            PHOTOPRISM_SITE_URL: "{{ secret.services.photoprism.public_site_url }}"
            PHOTOPRISM_ADMIN_PASSWORD: "{{ secret.services.photoprism.admin_password }}"
            PHOTOPRISM_DATABASE_DRIVER: "{{ secret.services.photoprism.db_driver }}"
            PHOTOPRISM_DATABASE_DSN: "{{ secret.services.photoprism.db_ro_dsn }}"
            PHOTOPRISM_AUTO_INDEX: "{{ secret.services.photoprism.auto_index_delay }}"
            PHOTOPRISM_AUTO_IMPORT: "{{ secret.services.photoprism.auto_import_delay }}"
            PHOTOPRISM_READONLY: "true"
            PHOTOPRISM_PUBLIC: "true"
            PHOTOPRISM_DISABLE_SETTINGS: "true"
          mounts:
            - source: photoprism_pictures
              target: /photoprism/originals
          volumes:
            - "{{ appdata_dir }}/photoprism/data:/photoprism/storage"
      tags: photoprism
    - role: docker/container
      vars:
        container:
          name: photoprism
          repository: "docker-hub.{{ secret.domain }}/photoprism/photoprism"
          tag: latest
          ip: "{{ secret.services.photoprism.ip }}"
          env:
            PHOTOPRISM_UPLOAD_NSFW: "{{ secret.services.photoprism.allow_nsfw }}"
            PHOTOPRISM_DETECT_NSFW: "{{ secret.services.photoprism.detect_nsfw }}"
            PHOTOPRISM_SITE_TITLE: "{{ secret.services.photoprism.title }}"
            PHOTOPRISM_SITE_CAPTION: "{{ secret.services.photoprism.caption }}"
            PHOTOPRISM_ADMIN_PASSWORD: "{{ secret.services.photoprism.admin_password }}"
            PHOTOPRISM_DATABASE_DRIVER: "{{ secret.services.photoprism.db_driver }}"
            PHOTOPRISM_DATABASE_DSN: "{{ secret.services.photoprism.db_dsn }}"
            PHOTOPRISM_AUTO_INDEX: "{{ secret.services.photoprism.auto_index_delay }}"
            PHOTOPRISM_AUTO_IMPORT: "{{ secret.services.photoprism.auto_import_delay }}"
          mounts:
            - source: photoprism_pictures
              target: /photoprism/originals
          volumes:
            - "{{ appdata_dir }}/photoprism/data:/photoprism/storage"
      tags: photoprism

    ### Photoprism Internal ###
    - role: docker/volume
      vars:
        volume:
          name: pictures-internal
          container: photoprism-internal
          driver: cifs
          mount_options: gid=100,uid=99,file_mode=0777,dir_mode=0777
      tags: photoprism
    - role: docker/container
      vars:
        container:
          name: photoprism-internal-db
          repository: "docker-hub.{{ secret.domain }}/mariadb"
          tag: "10"
          ip: "{{ secret.services.photoprism.db.internal_ip }}"
          env:
            MYSQL_ROOT_PASSWORD: "{{ secret.services.photoprism.db.root_password }}"
            MYSQL_DATABASE: "{{ secret.services.photoprism.db.database }}"
            MYSQL_USER: "{{ secret.services.photoprism.db.user }}"
            MYSQL_PASSWORD: "{{ secret.services.photoprism.db.password }}"
          volumes:
            - "{{ appdata_dir }}/photoprism-internal/database:/var/lib/mysql"
      tags: photoprism
    - role: docker/container
      vars:
        container:
          name: photoprism-internal
          repository: "docker-hub.{{ secret.domain }}/photoprism/photoprism"
          tag: latest
          ip: "{{ secret.services.photoprism.internal_ip }}"
          env:
            PHOTOPRISM_UPLOAD_NSFW: "{{ secret.services.photoprism.allow_nsfw }}"
            PHOTOPRISM_DETECT_NSFW: "{{ secret.services.photoprism.detect_nsfw }}"
            PHOTOPRISM_SITE_TITLE: "{{ secret.services.photoprism.title }}"
            PHOTOPRISM_SITE_CAPTION: "{{ secret.services.photoprism.caption }}"
            PHOTOPRISM_ADMIN_PASSWORD: "{{ secret.services.photoprism.admin_password }}"
            PHOTOPRISM_DATABASE_DRIVER: "{{ secret.services.photoprism.db_driver }}"
            PHOTOPRISM_DATABASE_DSN: "{{ secret.services.photoprism.internal_db_dsn }}"
            PHOTOPRISM_AUTO_INDEX: "{{ secret.services.photoprism.auto_index_delay }}"
            PHOTOPRISM_AUTO_IMPORT: "{{ secret.services.photoprism.auto_import_delay }}"
          mounts:
            - source: photoprism-internal_pictures-internal
              target: /photoprism/originals
          volumes:
            - "{{ appdata_dir }}/photoprism-internal/data:/photoprism/storage"
      tags: photoprism
    - role: docker/container
      vars:
        container:
          name: backup-photoprism-internal
          repository: ghcr.io/fred-drake/k8s-backup
          tag: "0.3"
          env:
            AWS_ACCESS_KEY_ID: "{{ secret.backup.keyId }}"
            AWS_SECRET_ACCESS_KEY: "{{ secret.backup.keySecret }}"
            RESTIC_REPOSITORY: "s3:http://minio-backup-app.{{ secret.domain }}:9000/restic"
            RESTIC_PASSWORD: "{{ secret.backup.restic.password }}"
            NAMESPACE: photoprism-internal
            BACKUP_TYPES: mysql
            MYSQL_HOST: "{{ secret.services.photoprism.db.internal_ip }}"
            MYSQL_DATABASE: "{{ secret.services.photoprism.db.database }}"
            MYSQL_USER: "{{ secret.services.photoprism.db.user }}"
            MYSQL_PASSWORD: "{{ secret.services.photoprism.db.password }}"
            MYSQL_BACKUP_FILE: "photoprism-internal.sql"
          volumes:
            - "{{ appdata_dir }}/photoprism-internal/data:/backup/photoprism-internal/data"
      tags: photoprism

    ### Prometheus Node Exporter ###
    - role: docker/container
      vars:
        container:
          name: node-exporter
          repository: "docker-hub.{{ secret.domain }}/prom/node-exporter"
          tag: latest
          ip: "{{ secret.services.prometheus.node_exporter.nuc8.ip }}"
          volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
          command:
            - "--path.procfs=/host/proc"
            - "--path.rootfs=/rootfs"
            - "--path.sysfs=/host/sys"
            - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      tags: prometheus

    #### Promtail ####
    - role: promtail
      tags: promtail
    - role: docker/container
      vars:
        container:
          name: promtail
          repository: "docker-hub.{{ secret.domain }}/grafana/promtail"
          tag: latest
          entrypoint: >
            /bin/sh -c
            "export HOSTNAME=`/bin/cat /etc/hostname` &&
            /usr/bin/promtail --client.external-labels=host=$HOSTNAME --config.file=/etc/promtail/config.yml"
          network: bridge
          volumes:
            - "{{ appdata_dir }}/promtail/promtail/config:/etc/promtail"
            - /var/log:/var/log:ro
            - /etc/hostname:/etc/hostname:ro
      tags: promtail

    - role: docker/container
      vars:
        container:
          name: diun-nuc8
          repository: "docker-hub.{{ secret.domain }}/crazymax/diun"
          tag: latest
          ip: "{{ secret.services.diun.nuc8_ip }}"
          env:
            LOG_LEVEL: info
            LOG_JSON: "false"
            DIUN_WATCH_WORKERS: "20"
            DIUN_WATCH_SCHEDULE: 0 9 * * *
            DIUN_PROVIDERS_DOCKER: "true"
            DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT: "true"
            DIUN_NOTIF_SLACK_WEBHOOKURL: "{{ secret.services.diun.webhook_url }}"
          volumes:
            - "{{ appdata_dir }}/diun/data:/data"
            - "/var/run/docker.sock:/var/run/docker.sock"
      tags: diun

